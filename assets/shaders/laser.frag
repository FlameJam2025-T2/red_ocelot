{
  "sksl": {
    "entrypoint": "laser_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 uSize;\nuniform float time;\nuniform float angle;\n\nvec4 fragColor;\n\nvec2 targetSize;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nvec2 FLT_flutter_local_rotate(vec2 point, float angle_1)\n{\n    float s = sin(angle_1);\n    float c = cos(angle_1);\n    return vec2((point.x * c) - (point.y * s), (point.x * s) + (point.y * c));\n}\n\nvec3 FLT_flutter_local_Strand(vec2 fragCoord, vec3 color, float hoffset, float hscale, float vscale, float timescale)\n{\n    float glow = 0.0599999986588954925537109375 * targetSize.y;\n    float twopi = 6.283185482025146484375;\n    float curve = 1.0 - abs(fragCoord.y - ((((sin(mod((((((fragCoord.x * hscale) / 100.0) / targetSize.x) * 1000.0) + (time * timescale)) + hoffset, twopi)) * targetSize.y) * 0.25) * vscale) + (targetSize.y / 2.0)));\n    float i = clamp(curve, 0.0, 1.0);\n    i += (clamp((glow + curve) / glow, 0.0, 1.0) * 0.4000000059604644775390625);\n    return color * i;\n}\n\nvec3 FLT_flutter_local_Muzzle(vec2 fragCoord, float timescale)\n{\n    float theta = atan((targetSize.y / 2.0) - fragCoord.y, (targetSize.x - fragCoord.x) + (0.12999999523162841796875 * targetSize.x));\n    float len = (targetSize.y * (10.0 + sin((theta * 20.0) + (float(int(time * 20.0)) * (-35.0))))) / 11.0;\n    float d = max(-0.60000002384185791015625, 1.0 - (sqrt(pow(abs(targetSize.x - fragCoord.x), 2.0) + pow(abs((targetSize.y / 2.0) - (((fragCoord.y - (targetSize.y / 2.0)) * 4.0) + (targetSize.y / 2.0))), 2.0)) / len));\n    return vec3(d * (1.0 + (sin((theta * 10.0) + (floor(time * 20.0) * 10.770000457763671875)) * 0.5)), d * (1.0 + ((-cos((theta * 8.0) - (floor(time * 20.0) * 8.770000457763671875))) * 0.5)), d * (1.0 + ((-sin((theta * 6.0) - (floor(time * 20.0) * 134.7700042724609375))) * 0.5)));\n}\n\nvoid FLT_main()\n{\n    targetSize = uSize / vec2(2.0);\n    vec2 fragCoord_1 = FLT_flutter_local_FlutterFragCoord();\n    vec2 center = uSize / vec2(2.0);\n    float scaleX = targetSize.x / uSize.x;\n    float scaleY = targetSize.y / uSize.y;\n    vec2 centered = fragCoord_1 - center;\n    vec2 scaled = vec2(centered.x * scaleX, centered.y * scaleY);\n    vec2 param = scaled;\n    float param_1 = angle;\n    vec2 rotated = FLT_flutter_local_rotate(param, param_1);\n    bool _312 = abs(rotated.x) > (targetSize.x / 2.0);\n    bool _323;\n    if (!_312)\n    {\n        _323 = abs(rotated.y) > (targetSize.y / 2.0);\n    }\n    else\n    {\n        _323 = _312;\n    }\n    if (_323)\n    {\n        fragColor = vec4(0.0);\n        return;\n    }\n    vec2 finalCoord = vec2(rotated.x + (targetSize.x / 2.0), rotated.y + (targetSize.y / 2.0));\n    float timescale_1 = 1.0;\n    vec3 c = vec3(0.0);\n    vec2 param_2 = finalCoord;\n    vec3 param_3 = vec3(1.0, 0.0, 0.0);\n    float param_4 = 1.7934000492095947265625 + (sin(time) * 30.0);\n    float param_5 = 1.0;\n    float param_6 = 0.1599999964237213134765625;\n    float param_7 = 10.0 * timescale_1;\n    c += FLT_flutter_local_Strand(param_2, param_3, param_4, param_5, param_6, param_7);\n    vec2 param_8 = finalCoord;\n    vec3 param_9 = vec3(0.0, 1.0, 0.0);\n    float param_10 = 1.644999980926513671875 + (sin(time) * 30.0);\n    float param_11 = 1.5;\n    float param_12 = 0.20000000298023223876953125;\n    float param_13 = 10.30000019073486328125 * timescale_1;\n    c += FLT_flutter_local_Strand(param_8, param_9, param_10, param_11, param_12, param_13);\n    vec2 param_14 = finalCoord;\n    vec3 param_15 = vec3(0.0, 0.0, 1.0);\n    float param_16 = 1.73500001430511474609375 + (sin(time) * 30.0);\n    float param_17 = 1.2999999523162841796875;\n    float param_18 = 0.189999997615814208984375;\n    float param_19 = 8.0 * timescale_1;\n    c += FLT_flutter_local_Strand(param_14, param_15, param_16, param_17, param_18, param_19);\n    vec2 param_20 = finalCoord;\n    vec3 param_21 = vec3(1.0, 1.0, 0.0);\n    float param_22 = 1.924499988555908203125 + (sin(time) * 30.0);\n    float param_23 = 1.60000002384185791015625;\n    float param_24 = 0.14000000059604644775390625;\n    float param_25 = 12.0 * timescale_1;\n    c += FLT_flutter_local_Strand(param_20, param_21, param_22, param_23, param_24, param_25);\n    vec2 param_26 = finalCoord;\n    vec3 param_27 = vec3(0.0, 1.0, 1.0);\n    float param_28 = 1.72339999675750732421875 + (sin(time) * 30.0);\n    float param_29 = 1.89999997615814208984375;\n    float param_30 = 0.23000000417232513427734375;\n    float param_31 = 14.0 * timescale_1;\n    c += FLT_flutter_local_Strand(param_26, param_27, param_28, param_29, param_30, param_31);\n    vec2 param_32 = finalCoord;\n    vec3 param_33 = vec3(1.0, 0.0, 1.0);\n    float param_34 = 1.84525001049041748046875 + (sin(time) * 30.0);\n    float param_35 = 1.2000000476837158203125;\n    float param_36 = 0.180000007152557373046875;\n    float param_37 = 9.0 * timescale_1;\n    c += FLT_flutter_local_Strand(param_32, param_33, param_34, param_35, param_36, param_37);\n    vec2 param_38 = finalCoord;\n    float param_39 = timescale_1;\n    c += clamp(FLT_flutter_local_Muzzle(param_38, param_39), vec3(0.0), vec3(1.0));\n    fragColor = vec4(c.x, c.y, c.z, 1.0);\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 0,
        "name": "uSize",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 1,
        "name": "time",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 2,
        "name": "angle",
        "rows": 1,
        "type": 10
      }
    ]
  }
}
{
  "sksl": {
    "entrypoint": "heat_shader_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform float u_time;\nuniform float u_temperature;\n\nvec4 fragColor;\n\nfloat FLT_flutter_local_random(vec2 st)\n{\n    return fract(sin(dot(st, vec2(12.98980045318603515625, 78.233001708984375))) * 43758.546875);\n}\n\nvoid FLT_main()\n{\n    vec2 uv = flutter_FragCoord.xy / vec2(1000.0, 600.0);\n    float wave = sin((uv.x + u_time) * 20.0) * 0.02999999932944774627685546875;\n    float shimmer = wave + (sin((uv.y + u_time) * 10.0) * 0.02999999932944774627685546875);\n    vec2 param = vec2(floor(uv.x * 10.0), floor(u_time * 10.0));\n    float flicker = FLT_flutter_local_random(param) * 0.25;\n    float edgeGlow = smoothstep(0.0, 0.300000011920928955078125, uv.x) * smoothstep(1.0, 0.699999988079071044921875, uv.x);\n    edgeGlow *= smoothstep(0.0, 0.20000000298023223876953125, uv.y);\n    vec3 cool = vec3(0.20000000298023223876953125 + (uv.x * 0.0500000007450580596923828125), 0.4000000059604644775390625 + (uv.x * 0.0500000007450580596923828125), 1.0);\n    vec3 hot = vec3(1.0, 0.20000000298023223876953125 + (uv.x * 0.0500000007450580596923828125), 0.0);\n    vec3 baseColor = mix(cool, hot, vec3(u_temperature));\n    vec3 finalColor = ((baseColor + vec3((shimmer * u_temperature) * 0.300000011920928955078125)) + vec3(flicker * u_temperature)) + vec3((edgeGlow * u_temperature) * 0.4000000059604644775390625);\n    fragColor = vec4(finalColor, 1.0);\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 0,
        "name": "u_time",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 1,
        "name": "u_temperature",
        "rows": 1,
        "type": 10
      }
    ]
  }
}